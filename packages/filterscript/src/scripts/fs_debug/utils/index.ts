import { Player } from "@infernus/core";
import { degreesToRadians } from "filterscript/utils/convert";
import { aVehicleNames, aWeaponNames } from "../constants";

export function isInvalidSkin(skinId: number) {
  // Created by Simon
  // Checks whether the skinId parsed is crashable or not.
  const badSkins = [3, 4, 5, 6, 8, 42, 65, 74, 86, 119, 149, 208, 273, 289];
  return badSkins.includes(skinId);
}

export function getXYInFrontOfPlayer(player: Player, distance = 0) {
  // Created by Y_Less
  let { x, y } = player.getPos();
  let angle = player.getFacingAngle().angle;

  const veh = player.getVehicle();
  if (veh) {
    angle = veh.getZAngle().angle;
  }

  x += distance * Math.sin(degreesToRadians(-angle));
  y += distance * Math.cos(degreesToRadians(-angle));

  return { x, y, distance };
}

export function getVehicleModelIDFromName(vName: string) {
  return aVehicleNames.indexOf(vName);
}

export function getWeaponModelIDFromName(wName: string) {
  for (let i = 0; i < 48; i++) {
    if (i === 19 || i === 20 || i === 21) continue;
    if (aWeaponNames[i] === wName) {
      return i;
    }
  }
  return -1;
}

export function isValidModel(modelId: number) {
  // Created by Y_Less.

  const modelDat = [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, -515899393,
    -134217729, -1, -1, 33554431, -1, -1, -1, -14337, -1, -33, 127, 0, 0, 0, 0,
    0, -8388608, -1, -1, -1, -16385, -1, -1, -1, -1, -1, -1, -1, -33, -1,
    -771751937, -1, -9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, 33554431, -25, -1, -1, -1, -1, -1, -1, -1073676289, -2147483648,
    34079999, 2113536, -4825600, -5, -1, -3145729, -1, -16777217, -63, -1, -1,
    -1, -1, -201326593, -1, -1, -1, -1, -1, -257, -1, 1073741823, -133122, -1,
    -1, -65, -1, -1, -1, -1, -1, -1, -2146435073, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, 1073741823, -64, -1, -1, -1, -1, -2635777, 134086663, 0, -64, -1,
    -1, -1, -1, -1, -1, -1, -536870927, -131069, -1, -1, -1, -1, -1, -1, -1, -1,
    -16384, -1, -33554433, -1, -1, -1, -1, -1, -1610612737, 524285, -128, -1,
    2080309247, -1, -1, -1114113, -1, -1, -1, 66977343, -524288, -1, -1, -1, -1,
    -2031617, -1, 114687, -256, -1, -4097, -1, -4097, -1, -1, 1010827263, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, -32768, -1, -1, -1, -1, -1, 2147483647, -33554434,
    -1, -1, -49153, -1148191169, 2147483647, -100781080, -262145, -57,
    134217727, -8388608, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1048577, -1, -449, -1017, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1835009, -2049, -1, -1, -1, -1, -1, -1, -8193, -1, -536870913, -1, -1, -1,
    -1, -1, -87041, -1, -1, -1, -1, -1, -1, -209860, -1023, -8388609, -2096897,
    -1, -1048577, -1, -1, -1, -1, -1, -1, -897, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1610612737, -3073, -28673, -1, -1, -1, -1537, -1, -1, -13, -1,
    -1, -1, -1, -1985, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1056964609, -1, -1, -1, -1, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -236716037, -1, -1, -1, -1, -1, -1, -1, -536870913, 3, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -2097153, -2109441, -1, 201326591, -4194304, -1, -1,
    -241, -1, -1, -1, -1, -1, -1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    -32768, -1, -1, -1, -2, -671096835, -1, -8388609, -66323585, -13, -1793,
    -32257, -247809, -1, -1, -513, 16252911, 0, 0, 0, -131072, 33554383, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, 8356095, 0, 0, 0, 0, 0, 0, -256, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -268435449, -1, -1, -2049, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, 92274627, -65536, -2097153, -268435457,
    591191935, 1, 0, -16777216, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 127,
  ];

  if (
    modelId >= 0 &&
    modelId / 32 < modelDat.length &&
    (modelDat[Math.floor(modelId / 32)] & (1 << modelId % 32)) !== 0
  ) {
    return true;
  }
  return false;
}
